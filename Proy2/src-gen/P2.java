// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/P2.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class P2 {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=9;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=11;
      Object coder=$fix(P2.createCoder());
      $line=12;
      Object deCoder=$fix(P2.createDecoder());
      $line=20;
      Utilities.testCodeDecode($cast(gold.structures.automaton.ITransducer.class,coder),$cast(gold.structures.automaton.ITransducer.class,deCoder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=26;
      Object x=$fix($invokeMethod(String.class,"valueOf",true,null,new Object[]{$opCartsY(new Object[]{$opIntvlY('a','c'),$opIntvlY('a','c')})}));
      $line=27;
      gold.structures.set.ISet $v1=$newSet();
      $v2:for (Object c:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
        for (Object d:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
          for (Object e:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
            for (Object f:GCollections.unmodifiableCollection('&')) {
              $v1.add(GCollections.asList(c,d,e,f));
            }
          }
        }
      }
      Object y=$fix($v1);
      $line=28;
      gold.structures.set.ISet $v3=$newSet();
      $v4:for (Object a:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
        for (Object b:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
          $v3.add(GCollections.asList(a,b));
        }
      }
      gold.structures.set.ISet $v5=$newSet();
      $v6:for (Object c:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
        for (Object d:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
          for (Object e:GCollections.unmodifiableCollection($opIntvlY('a','c'))) {
            $v5.add(GCollections.asList(c,d,e));
          }
        }
      }
      Object Q=$fix($opUnionY($opUnionY($opUnionY($opUnionY($opIntvlY('a','c'),$v3),$v5),GCollections.asSet('&','s')),y));
      $line=29;
      Object \u03A3=$fix($opUnionY($opIntvlY('a','c'),GCollections.asSet('&')));
      $line=30;
      Object \u03A3_=$fix($opUnionY($opUnionY($opIntvlY('a','c'),GCollections.asSet('&')),GCollections.asSet('*')));
      $line=32;
      Object q_0=$fix('s');
      $line=33;
      Object F=$fix(GCollections.asSet('&'));
      $line=34;
      System.out.println($message(new Object[]{Q}));
      $line=36;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,\u03A3_,q_0,F,new GMethod(P2.class,"\u03B4"),new GMethod(P2.class,"g"),new GMethod(P2.class,"h")});
      if (true) break $try;
      $line=37;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B4(Object state, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=40;
      if (($bool($opMembrY(state,$opIntvlY('a','c')))&&!$opEqualY(input,'&'))) {
        $line=42;
        System.out.println($message(new Object[]{GCollections.asList(state,input)}));
        $line=43;
        $result=GCollections.asList(state,input);
        if (true) break $try;
      }
      else {
        $line=44;
        if (($opMembrY(state,$opCartsY(new Object[]{$opIntvlY('a','c'),$opIntvlY('a','c')}))&&!$opEqualY(input,'&'))) {
          $line=45;
          System.out.println($message(new Object[]{GCollections.asList($getArrayValue(state,new Object[]{0}),$getArrayValue(state,new Object[]{1}),input)}));
          $line=46;
          $result=GCollections.asList($getArrayValue(state,new Object[]{0}),$getArrayValue(state,new Object[]{1}),input);
          if (true) break $try;
        }
        else {
          $line=47;
          if (($opEqualY(input,'&')&&$opMembrY(state,$opCartsY(new Object[]{$opIntvlY('a','c'),$opIntvlY('a','c'),$opIntvlY('a','c')})))) {
            $line=48;
            System.out.println($message(new Object[]{GCollections.asList($getArrayValue(state,new Object[]{0}),$getArrayValue(state,new Object[]{1}),$getArrayValue(state,new Object[]{2}),input)}));
            $line=49;
            $result=GCollections.asList($getArrayValue(state,new Object[]{0}),$getArrayValue(state,new Object[]{1}),$getArrayValue(state,new Object[]{2}),input);
            if (true) break $try;
          }
          else {
            $line=50;
            if ($opEqualY($opAbsolY(state),3)) {
              $line=50;
              $result=input;
              if (true) break $try;
            }
            else {
              $line=51;
              $result=input;
              if (true) break $try;
            }
          }
        }
      }
      $line=53;
      $rethrow(new RuntimeException("The function \"\u03B4(state:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object h(Object state, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=57;
      if ($opEqualY($opAbsolY(state),3)) {
        $line=57;
        $result=$opAdditY($opAdditY($invokeMethod(String.class,"valueOf",true,null,new Object[]{$getArrayValue(state,new Object[]{2})}),$invokeMethod(String.class,"valueOf",true,null,new Object[]{$getArrayValue(state,new Object[]{1})})),$invokeMethod(String.class,"valueOf",true,null,new Object[]{$getArrayValue(state,new Object[]{0})}));
        if (true) break $try;
      }
      else {
        $line=58;
        if ($opEqualY($opAbsolY(state),4)) {
          $line=59;
          $result='&';
          if (true) break $try;
        }
        else {
          $line=60;
          $result="";
          if (true) break $try;
        }
      }
      $line=62;
      $rethrow(new RuntimeException("The function \"h(state:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"h",$line);
    }
    return $result;
  }
  public static Object g(Object s) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=65;
      $result="";
      if (true) break $try;
      $line=66;
      $rethrow(new RuntimeException("The function \"g(s:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"g",$line);
    }
    return $result;
  }
  public static ITransducer createDecoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=71;
      gold.structures.set.ISet $v7=$newSet();
      $v8:for (Object ar:GCollections.unmodifiableCollection(GCollections.asSet('1','0'))) {
        for (Object hay:GCollections.unmodifiableCollection(GCollections.asSet('1','0'))) {
          for (Object fin:GCollections.unmodifiableCollection(GCollections.asSet('1','0'))) {
            for (Object size:GCollections.unmodifiableCollection($opIntvlY(0,4))) {
              for (Object almd:GCollections.unmodifiableCollection($opIntvlY(0,3))) {
                for (Object num:GCollections.unmodifiableCollection($opIntvlY(0,2))) {
                  $v7.add(GCollections.asList(size,almd,num,fin,hay,ar));
                }
              }
            }
          }
        }
      }
      Object Q=$fix($opUnionY($v7,GCollections.asSet("err")));
      $line=72;
      Object \u03A3=$fix($opUnionY($opUnionY($opUnionY($opUnionY($opUnionY($opIntvlY('a','z'),$opIntvlY('0','2')),GCollections.asSet('#')),GCollections.asSet('*')),GCollections.asSet('@')),GCollections.asSet('$')));
      $line=73;
      Object \u03A3_=$fix($opUnionY($opUnionY($opIntvlY('a','z'),GCollections.asSet(' ')),GCollections.asSet('$')));
      $line=74;
      Object q_0=$fix(GCollections.asList(0,0,1,'0','0','0'));
      $line=75;
      gold.structures.set.ISet $v9=$newSet();
      $v10:for (Object hay:GCollections.unmodifiableCollection(GCollections.asSet('1','0'))) {
        for (Object almd:GCollections.unmodifiableCollection($opIntvlY(0,3))) {
          $v9.add(GCollections.asList(4,almd,1,'1',hay,'1'));
        }
      }
      Object F=$fix($v9);
      $line=76;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,\u03A3_,q_0,F,new GMethod(P2.class,"\u03B41"),new GMethod(P2.class,"g"),new GMethod(P2.class,"h1")});
      if (true) break $try;
      $line=77;
      $rethrow(new RuntimeException("The function \"createDecoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"createDecoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object \u03B41(Object state, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=81;
      $result=state;
      if (true) break $try;
      $line=82;
      $rethrow(new RuntimeException("The function \"\u03B41(state:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object \u03B41(java.lang.Iterable $v11, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v12=GCollections.unmodifiableCollection($v11).iterator();
      Object size=$v12.next();
      Object almd=$v12.next();
      Object num=$v12.next();
      Object fin=$v12.next();
      Object hay=$v12.next();
      Object nu=$v12.next();
      $line=87;
      if ($opEqualY(input,'$')) {
        $line=87;
        $result=GCollections.asList(size,almd,num,'1',hay,nu);
        if (true) break $try;
      }
      else {
        $line=88;
        if ($opLesstY(size,4)) {
          $line=90;
          if ($opMembrY(input,$opIntvlY('a','z'))) {
            $line=90;
            $result=GCollections.asList($opAdditY(size,1),almd,num,'0',hay,'0');
            if (true) break $try;
          }
          else {
            $line=91;
            if ($opEqualY(input,'#')) {
              $line=93;
              if ($opGreatY($opAdditY(almd,1),3)) {
                $line=93;
                $result="err";
                if (true) break $try;
              }
              else {
                $line=94;
                $result=GCollections.asList($opAdditY(size,1),$opAdditY(almd,1),num,'0','1','0');
                if (true) break $try;
              }
            }
            else {
              $line=97;
              $result="err";
              if (true) break $try;
            }
          }
        }
        else {
          $line=100;
          if ($opEqualY(size,4)) {
            $line=102;
            if ($opEqualY(input,'*')) {
              $line=102;
              $result=GCollections.asList(0,0,1,'0','0','0');
              if (true) break $try;
            }
            else {
              $line=103;
              if ($opEqualY(input,'@')) {
                $line=104;
                if ($opEqualY(hay,'1')) {
                  $line=104;
                  $result="err";
                  if (true) break $try;
                }
                else {
                  $line=106;
                  if ($opGreaqY($opAdditY(num,1),3)) {
                    $line=106;
                    $result=GCollections.asList(0,almd,0,'0',hay,'0');
                    if (true) break $try;
                  }
                  else {
                    $line=107;
                    $result=GCollections.asList(0,almd,$opAdditY(num,1),'0',hay,nu);
                    if (true) break $try;
                  }
                }
              }
              else {
                $line=112;
                if ($opMembrY(input,$opIntvlY('0','3'))) {
                  $line=114;
                  if ($opEqualY(Integer.parseInt($cast(java.lang.String.class,input)),num)) {
                    $line=114;
                    $result=GCollections.asList(size,almd,1,fin,hay,'1');
                    if (true) break $try;
                  }
                  else {
                    $line=115;
                    $result="err";
                    if (true) break $try;
                  }
                }
                else {
                  $line=118;
                  $result="err";
                  if (true) break $try;
                }
              }
            }
          }
          else {
            $line=121;
            $result="err";
            if (true) break $try;
          }
        }
      }
      $line=124;
      $rethrow(new RuntimeException("The function \"\u03B41(\u27E8size,almd,num,fin,hay,nu\u27E9:java.lang.Iterable,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object h1(Object state, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=130;
      $result="";
      if (true) break $try;
      $line=131;
      $rethrow(new RuntimeException("The function \"h1(state:Object,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"h1",$line);
    }
    return $result;
  }
  public static Object h1(java.lang.Iterable $v13, Object input) {
    int $line=0;
    Object $result=null;
    $try:try {
      java.util.Iterator $v14=GCollections.unmodifiableCollection($v13).iterator();
      Object size=$v14.next();
      Object almd=$v14.next();
      Object num=$v14.next();
      Object fin=$v14.next();
      Object hay=$v14.next();
      Object nu=$v14.next();
      $line=135;
      if ($opEqualY(input,'$')) {
        $line=135;
        $result='$';
        if (true) break $try;
      }
      else {
        $line=136;
        if ($opMembrY(input,$opIntvlY('a','z'))) {
          $line=136;
          $result=input;
          if (true) break $try;
        }
        else {
          $line=137;
          if ($opEqualY(input,'*')) {
            $line=137;
            $result=' ';
            if (true) break $try;
          }
          else {
            $line=138;
            $result="";
            if (true) break $try;
          }
        }
      }
      $line=141;
      $rethrow(new RuntimeException("The function \"h1(\u27E8size,almd,num,fin,hay,nu\u27E9:java.lang.Iterable,input:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"h1",$line);
    }
    return $result;
  }
  public static Object number(Object c, Object n) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=145;
      n=$fix(Integer.parseInt($cast(java.lang.String.class,n)));
      $line=146;
      if ($opEqualY(n,0)) {
        $line=146;
        $result="";
        if (true) break $try;
      }
      else {
        $line=147;
        $result=$opAdditY($invokeMethod(String.class,"valueOf",true,null,new Object[]{c}),P2.number(c,$opSubtrY(n,1)));
        if (true) break $try;
      }
      $line=149;
      $rethrow(new RuntimeException("The function \"number(c:Object,n:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,P2.class,"number",$line);
    }
    return $result;
  }
}
