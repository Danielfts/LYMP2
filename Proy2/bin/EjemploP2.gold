// -----------------------
// Jose Manuel Botello Meza 202020489
// Juan Diego Sarmiento Sánchez 202121484
// Proyect 2 



using gold.**
  
         
  
var A
var B

procedure main(args:String[]) begin
	var sc:java.util.Scanner(System.$in)
    
    A = ('a'‥'z')
    B = ('0'‥'9')
	coder:=createCoder()
   	deCoder:=createDecoder()
   	
    
    //GAutomataFrame.show(coder)
   //GAutomataFrame.show(deCoder)
   
  	
	
  	Utilities.testCodeDecode(coder,deCoder)
		
end

function createCoder():ITransducer begin
	Q := {⟨dips,no,endi,val⟩| val in {'0','1'},endi in ('0'‥'1') , dips in (0‥4), no in (0‥2)} ∪ {"err"}	
	Σ := ('a'‥'z') ∪ {' '}∪{'$'}
	Σ´:= ('a'‥'z') ∪('0'‥'2')∪ {'#'}∪{'*'}∪{'@'}∪{'$'}
	
	q₀:=  ⟨4,1,'0','0'⟩
	F := {⟨disp,no,'1','1'⟩|disp in (0‥4), no in (0‥2)}
	
	return 	GDeterministicTransducer(Q,Σ,Σ´,q₀,F,δ,g,h)
end

function δ(state,input) begin
   return "err" 
end

function δ(⟨dips,no,endi,val⟩,input) begin
   if input = '$' then return ⟨dips,no,'1',val⟩ 
   elseif input= ' ' then 
   		if val='1' then	return ⟨4,1,'0','0'⟩ 
   		else return "err"
   		end	
   elseif input in ('a'‥'z') then 
   		if dips - 1 < 0 then 
   			if no +1 >= 3 then return ⟨3,0,'0','1'⟩
   			else return ⟨3,no+1,'0','1'⟩
   			end
   		else return ⟨dips-1,no,'0','1'⟩
   		end
   		
   else return "err"
   end 	
end


	
function h(state,input) begin
   return ""
end

function h(⟨dips,no,endi,val⟩,input) begin
   if input in ('a'‥'z') then 
   	 if dips > 0 then return input 
   	 else  return '@' + String.valueOf(input)
   	 end
   elseif input = ' ' then return number('#',dips)+no +'*' 
   elseif input= '$' then return number('#',dips)  + no + '$'
   else return ""
   	
   end
   
end




function g(s) begin
	return λ
end


	
function createDecoder():ITransducer begin
	Q := {⟨size,almd,num,fin,hay,ar⟩|ar in {'1','0'},hay in {'1','0'}, fin in {'1','0'},size in (0‥4),almd in (0‥3),num in (0‥2)}∪{"err"}	
	Σ := ('a'‥'z') ∪('0'‥'2')∪ {'#'}∪{'*'}∪{'@'}∪{'$'}
	Σ´:= ('a'‥'z') ∪ {' '}∪{'$'}
	q₀:= ⟨0,0,1,'0','0','0'⟩
	F :={⟨4,almd,1,'1',hay,'1'⟩|hay in {'1','0'},almd in (0‥3)}
	return 	GDeterministicTransducer(Q,Σ,Σ´,q₀,F,δ1,g,h1)
end
	
	
function δ1(state,input) begin
 return state 
 end


function δ1(⟨size,almd,num,fin,hay,nu⟩,input) begin
 
 if input = '$' then return ⟨size,almd,num,'1',hay,nu⟩
 elseif size < 4 then
  	
  	if input in ('a'‥'z') then return ⟨size+1,almd,num,'0',hay,'0'⟩
  	elseif input='#' then
  		
  		if almd+1 >3 then return "err"
  		else return ⟨size+1,almd+1,num,'0','1','0'⟩
  		end
  	
  	else return "err"	
  	end
  
  elseif size = 4 then
  	
  	if input ='*' then return ⟨0,0,1,'0','0','0'⟩
    elseif input = '@' then 
  	   if hay = '1' then return "err"
  	   else
  	    	if num+1 >=3  then return ⟨0,almd,0,'0',hay,'0'⟩
  			else return ⟨0,almd,num+1,'0',hay,nu⟩
  			end	
	
  	   end
  		
	elseif input in ('0'‥'3') then
	
		if Integer.parseInt(input) = num then return ⟨size,almd,1,fin,hay,'1'⟩
		else return "err"
		end
	
	else return "err"	
    end
  
  else return "err"
  end
 
end




function h1(state,input) begin 
  return ""
  end
  
function h1(⟨size,almd,num,fin,hay,nu⟩,input) begin

  if input == '$' then return '$'
  elseif input in ('a'‥'z') then return input
  elseif input = '*' then return ' '	
  else return ""	
  end

end
  
  
function number(c,n) begin 
	n:= Integer.parseInt(n)
	if n=0  then return λ
	else return String.valueOf(c)+number(c,n-1)
	end
end